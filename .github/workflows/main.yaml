# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: aihub

on:
  push:
    branches:
      - main
      - dotNET2024
    tags:
      - v*
  pull_request:
    branches:
      - main
      - dotNET2024
  workflow_dispatch:
    
env:
  REGISTRY: ghcr.io
  BOT_IMAGE_NAME: minecraft-bot

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Setup MinVer
        run: |
          dotnet tool install --global minver-cli --version 4.3.0
          
      - name: Calculate Version
        run: |
          echo "MINVERVERSIONOVERRIDE=$($HOME/.dotnet/tools/minver -t v. -m 1.0 -p preview)" >> $GITHUB_ENV

      - name: Login to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.BOT_IMAGE_NAME }}
          
      - name: Lower case REPO
        run: |
          echo "GITHUB_REPOSITORY_LOWER_CASE=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
          
      - name: Build and push Docker image for MINECRAFT BOT
        uses: docker/build-push-action@v3
        with:
          context: ./minecraftbot/
          file: ./minecraftbot/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.GITHUB_REPOSITORY_LOWER_CASE }}/${{ env.BOT_IMAGE_NAME }}:${{ env.MINVERVERSIONOVERRIDE }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: MINVERVERSIONOVERRIDE=${{ env.MINVERVERSIONOVERRIDE }}
